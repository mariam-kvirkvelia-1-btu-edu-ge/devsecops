Docker installation
1. wget https://releases.rancher.com/install-docker/20.10.sh
2. sh 20.10.sh
3. sudo apt  install docker.io
4. sudo systemctl start docker
5. sudo systemctl enable docker
6. sudo systemctl status docker



1. git clone https://github.com
2. docker build -t name .
3. docker run -v /var/run/docker.sock:/var/run/docker.sock -v $HOME/Library/Caches:/root/.cache/ aquasec/trivy:0.47.0 image pre_exam=name
4. 
https://hub.docker.com/_/python

3.13.0a2-slim-bullseye








What is DevOps?<<<<<<<<<<<<<<<<<<<<<<<<<<<
DevOps-ის მთავარი მიზანია ავტომატიზირება და გამარტივება
პროგრამული უზრუნველყოფის მიწოდებისა და ინფრასტრუქტურის ცვლილებების პროცესების ავტომატიზირება და გამარტივება, 
რაც გამოიწვევს უფრო სწრაფ და საიმედო განვითარებისა და დანერგვის ციკლებს.

DevOps-ის ძირითადი პრინციპები?<<<<<<<<<<<<<<<<<
პროგრამული უზრუნველყოფის განვითარების სასიცოცხლო ციკლის ავტომატიზაცია. ეს მოიცავს ტესტირების ავტომატიზირებას, შენობებს, გამოშვებას,
განვითარების გარემოს უზრუნველყოფას და სხვა სახელმძღვანელო ამოცანებს, რომლებმაც შეიძლება შეანელონ ან შეიყვანონ ადამიანური შეცდომა პროგრამული უზრუნველყოფის მიწოდების პროცესში.

თანამშრომლობა და კომუნიკაცია. კარგ DevOps გუნდს აქვს ავტომატიზაცია, მაგრამ დიდ DevOps გუნდს ასევე აქვს ეფექტური თანამშრომლობა და კომუნიკაცია.

უწყვეტი გაუმჯობესება და ნარჩენების მინიმიზაცია. განმეორებადი ამოცანების ავტომატიზირებიდან დაწყებული შესრულების მეტრიკის ყურებამდე, 
გამოშვების დროის შემცირების გზების ან აღდგენის საშუალო დროის შესამცირებლად, მაღალი ხარისხის DevOps გუნდები რეგულარულად ეძებენ სფეროებს, რომლებიც შეიძლება გაუმჯობესდეს.

ჰიპერფოკუსირება მომხმარებლის საჭიროებებზე მოკლე უკუკავშირის მარყუჟებით. ავტომატიზაციის, გაუმჯობესებული კომუნიკაციისა და თანამშრომლობის მეშვეობით და
მუდმივი გაუმჯობესება, DevOps-ის გუნდებს შეუძლიათ გარკვეული მომენტი დაუთმონ და ფოკუსირება მოახდინონ იმაზე, თუ რა სურთ რეალურ მომხმარებლებს და როგორ მისცენ ეს მათ.

DevOps-ის ოთხი ფაზა<<<<<<<<<<<<<<<<<
ფაზა 1: შემოიტანეთ თქვენი საკუთარი DevOps ფაზაში Bring Your Own DevOps, თითოეულმა გუნდმა 
შეარჩია საკუთარი თულები. ამ მიდგომამ გამოიწვია პრობლემები, როდესაც გუნდები ცდილობდნენ 
ერთად იმუშაონ, რადგან ისინი არ იცნობდნენ სხვა გუნდების ინსტრუმენტებს.

ფაზა 2: Best-in-class DevOps განსხვავებული ინსტრუმენტების გამოყენების გამოწვევების გადასაჭრელად, 
ორგანიზაციები გადავიდნენ მეორე ფაზაში, Best-in-class DevOps. ამ ფაზაში, ორგანიზაციები 
სტანდარტიზებულია ინსტრუმენტების ერთსა და იმავე კომპლექტზე, DevOps-ის სასიცოცხლო 
ციკლის თითოეული ეტაპისთვის ერთი სასურველი ხელსაწყოთი. 
ის დაეხმარა გუნდებს ერთმანეთთან თანამშრომლობაში, მაგრამ შემდეგ პრობლემა გახდა პროგრამული 
ცვლილებების გადატანა ინსტრუმენტების მეშვეობით თითოეული ეტაპისთვის.

ფაზა 3: Do-it-yourself DevOps ამ პრობლემის მოსაგვარებლად, ორგანიზაციებმა მიიღეს Do-it-Yourself (DIY) DevOps.

ფაზა 4: DevOps პლატფორმა A single-application platform მიდგომა აუმჯობესებს გუნდის გამოცდილებას და ბიზნეს ეფექტურობას. DevOps პლატფორმა ცვლის DIY DevOps-ს, რაც საშუალებას აძლევს 
ხილვადობას და კონტროლს DevOps-ის სასიცოცხლო ციკლის ყველა ეტაპზე. ყველა გუნდის - განვითარების, ოპერაციების, IT, უსაფრთხოებისა და ბიზნესის - უფლებამოსილების მინიჭებით, რომ ერთობლივად დაგეგმონ, 
შექმნან, უზრუნველყონ და განათავსონ პროგრამული უზრუნველყოფა ბოლომდე ერთიან სისტემაში, DevOps პლატფორმა წარმოადგენს ფუნდამენტურ ცვლილებას სრული რეალიზაციისთვის.


DevOps-ის სასიცოცხლო ციკლი და როგორ მუშაობს DevOps<<<<<<<<<<<<<<
Გეგმა, მოაწყეთ სამუშაო, რომელიც უნდა შესრულდეს, დაადგინეთ პრიორიტეტები და თვალყური ადევნეთ მის დასრულებას.
Შექმნა, დაწერეთ, შეიმუშავეთ, განავითარეთ და უსაფრთხოდ მართეთ კოდი და პროექტის მონაცემები თქვენს გუნდთან ერთად.
გადაამოწმეთ, დარწმუნდით, რომ თქვენი კოდი მუშაობს სწორად და იცავს თქვენს ხარისხის სტანდარტებს - იდეალურია ავტომატური ტესტირებით.
პაკეტი, შეფუთეთ თქვენი აპლიკაციები და დამოკიდებულებები, მართეთ კონტეინერები და შექმენით არტეფაქტები.

უსაფრთხო, შეამოწმეთ დაუცველობა სტატიკური და დინამიური ტესტების, fuzz ტესტირების და
დამოკიდებულების სკანირება.
გათავისუფლება, განათავსეთ პროგრამული უზრუნველყოფა საბოლოო მომხმარებლებისთვის.
კონფიგურაცია, თქვენი აპლიკაციების მხარდასაჭერად საჭირო ინფრასტრუქტურის მართვა და კონფიგურაცია.
მონიტორი, თვალყური ადევნეთ შესრულების მეტრებს და შეცდომებს, რათა შემცირდეს სიმძიმის და სიხშირე
ინციდენტები.
მართვა, მართეთ უსაფრთხოების ხარვეზები, პოლიტიკა და შესაბამისობა თქვენს ორგანიზაციაში.


როგორ უკავშირდება DevSecOps DevOps-ს?<<<<<<<<<<<<<<<<<<<<<<<<<
უსაფრთხოება გახდა პროგრამული უზრუნველყოფის განვითარების სასიცოცხლო ციკლის განუყოფელი ნაწილი, უსაფრთხოების უმეტესი ნაწილი შეცვლილია განვითარების პროცესში. 
DevSecOps უზრუნველყოფს, რომ DevOps გუნდებს ესმით უსაფრთხოებისა და შესაბამისობის მოთხოვნები აპლიკაციის შექმნის თავიდანვე და სათანადოდ დაიცვან პროგრამული უზრუნველყოფის მთლიანობა.
DevSecOps შეიძლება განხორციელდეს მთელ რიგ გარემოში, როგორიცაა შიდა, ღრუბლოვანი და ჰიბრიდული, რაც უზრუნველყოფს მაქსიმალურ კონტროლს პროგრამული უზრუნველყოფის განვითარების მთელი ცხოვრების ციკლზე.
უსაფრთხოების უწყვეტი ინტეგრაციით DevOps-ის სამუშაო ნაკადებში, ორგანიზაციები იძენენ ხილვადობას და კონტროლს, რომელიც აუცილებელია უსაფრთხოების კომპლექსური მოთხოვნების დასაკმაყოფილებლად, 
მათ შორის დაუცველობის შესახებ ანგარიშგება და აუდიტი.






